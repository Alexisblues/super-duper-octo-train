{"remainingRequest":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/r00t/projects/0day_iot/Arbitrium/arbitrium5/src/viewsCore/HomeCore.vue?vue&type=style&index=0&id=25416d79&scoped=true&lang=css&","dependencies":[{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium5/src/viewsCore/HomeCore.vue","mtime":1596192584834},{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium5/node_modules/css-loader/dist/cjs.js","mtime":1595882030058},{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium5/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1595882029770},{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium5/node_modules/postcss-loader/src/index.js","mtime":1595882030086},{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium5/node_modules/cache-loader/dist/cjs.js","mtime":1595882030066},{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium5/node_modules/vue-loader/lib/index.js","mtime":1595882029770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2Nyb2xsLXkgewogICBvdmVyZmxvdy15OiBhdXRvCn0KCi5jYXJkLWJvZHkgewogIG92ZXJmbG93LXk6IHNjcm9sbDsKICBtYXgtaGVpZ2h0OiA4M3ZoOwp9Cg=="},{"version":3,"sources":["HomeCore.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"HomeCore.vue","sourceRoot":"src/viewsCore","sourcesContent":["<template>\n\n    <v-card>\n      <NavDrawer :drawerBool=\"this.$store.state.drawerShow\" v-on:to-signOut=\"signOut\"/>\n      <v-container>\n        <v-row dense class=\"card-body\" fluid>\n          <v-col\n            v-for=\"(item, i) in items\"\n            :key=\"i\"\n            cols=\"12\"\n          >\n            <v-card\n              :color=\"colorGen()\"\n              dark\n              \n            >\n              <div class=\"d-flex flex-no-wrap justify-space-between\">\n                <div>\n                  <v-card-title\n                    class=\"headline\"\n                    v-text=\"generateSerial()\"\n                  ></v-card-title>\n                  <v-card-subtitle v-html=\"item.deviceInfo\"></v-card-subtitle>\n              <v-card-actions>\n              <router-link :to=\"'shell/'+item.deviceID\" target=\"_blank\">\n                <v-btn text>Open shell</v-btn>\n              </router-link>\n\n              <v-menu\n                transition=\"slide-x-transition\"\n                bottom\n                right\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    text\n                  >\n                    <v-icon>mdi-dots-vertical</v-icon>\n                  </v-btn>\n                </template>\n\n                <v-list>\n                  <v-list-item\n                    v-for=\"(item, i) in itemsX\"\n                    :key=\"i\"\n                    @click=\"dropTest(item.title)\"\n                  >\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n\n\n              </v-card-actions>\n\n                </div>\n                <v-avatar\n                  class=\"ma-3\"\n                  size=\"125\"\n                  tile\n                >\n                  <v-img :src=\"item.src\"></v-img>\n                </v-avatar>\n              </div>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card>\n</template>\n\n<script>\nimport NavDrawer from '@/components/NavDrawer.vue';\n\n\nexport default {\n  name: 'HomeCore',\n  components:{\n    NavDrawer,\n\n  },\n  methods: {\n        async signOut() {\n          let loginAttempt = await this.$store.dispatch(\"signOut\");\n          if (loginAttempt.error) {\n            alert(\"Failed to logout, please refresh the page\");\n          }else{\n              localStorage.removeItem('authtoken');\n              this.$router.push('/login');\n          }\n        },\n        colorGen(){\n          let mycolor = '#'+(Math.abs(0.5-Math.random())*0xFFFFFF<<0).toString(16);\n          return mycolor;\n        },\n        generateSerial() {\n          var chars = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',    \n          serialLength = 6,\n          randomSerial = \"ID: \",\n          i, randomNumber;\n          for (i = 0; i < serialLength; i = i + 1) {\n              randomNumber = Math.floor(Math.random() * chars.length);\n              randomSerial += chars.substring(randomNumber, randomNumber + 1);\n          }\n          return randomSerial;\n        },\n        dropTest(val){\n          alert(val);\n        }\n  },\n  data: () => ({\n    itemsX: [\n      { title: 'Dashboard', icon: 'dashboard' },\n      { title: 'Account', icon: 'account_box' },\n      { title: 'Admin', icon: 'gavel' },\n    ],\n    items: [\n      {\n        color: '#1F7087',\n        src: require('../assets/deviceIcon/Linux.svg'),\n        deviceID: 'g5G7Ks',\n        deviceInfo: 'IP: 127.0.0.1 <br /> Active tasks : 0',\n      },\n      {\n        color: '#952175',\n        src: require('../assets/deviceIcon/Android.svg'),\n        deviceID: 'Asdf6F',\n        deviceInfo: 'IP: 127.0.0.1 <br /> Active tasks : 0',\n      },\n      {\n        color: '#952175',\n        src: require('../assets/deviceIcon/Windows.svg'),\n        deviceID: 'Bgf34h',\n        deviceInfo: 'IP: 127.0.0.1 <br /> Active tasks : 0',\n      },\n      {\n        color: '#952175',\n        src: require('../assets/deviceIcon/iOS.svg'),\n        deviceID: '',\n        deviceInfo: 'IP: 127.0.0.1 <br /> Active tasks : 0',\n      },\n      {\n        color: '#952175',\n        src: require('../assets/deviceIcon/Windows.svg'),\n        deviceID: '',\n        deviceInfo: 'IP: 127.0.0.1 <br /> Active tasks : 0',\n      },\n    ],\n  }),\n}\n</script>\n\n<style scoped>\n.scroll-y {\n   overflow-y: auto\n}\n\n.card-body {\n  overflow-y: scroll;\n  max-height: 83vh;\n}\n</style>"]}]}