{"remainingRequest":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/Apps/Arbitrium/Arbitrium_ControlPanel/src/viewsCore/SettingsCore.vue?vue&type=style&index=0&id=3311973d&scoped=true&lang=css&","dependencies":[{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/src/viewsCore/SettingsCore.vue","mtime":1608611814949},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/css-loader/dist/cjs.js","mtime":1608611815937},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1608611815653},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/postcss-loader/src/index.js","mtime":1608611816305},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/cache-loader/dist/cjs.js","mtime":1608611815941},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/vue-loader/lib/index.js","mtime":1608611815653}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zY3JvbGwteSB7CiAgIG92ZXJmbG93LXk6IGF1dG8KfQoKLmNhcmQtYm9keSB7CiAgb3ZlcmZsb3cteTogc2Nyb2xsOwogIG1heC1oZWlnaHQ6IDgzdmg7Cn0K"},{"version":3,"sources":["SettingsCore.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SettingsCore.vue","sourceRoot":"src/viewsCore","sourcesContent":["<template>\n\n    <v-card>\n      <NavDrawer :drawerBool=\"this.$store.state.drawerShow\"\n      v-on:to-signOut=\"signOut\"\n      v-on:to-switchCore=\"switchCore\"\n      />\n      <v-container grid-list-lg>\n        <v-row dense class=\"card-body\" fluid align=\"start\">\n          <v-col\n            v-for=\"(item, i) in mainSettings\"\n            :key=\"i\"\n            cols=\"12\"\n          >\n            <v-card\n              dark\n              class=\"justify-center\"\n            >\n              <div class=\"d-flex flex-no-wrap justify-space-between\">\n                <div>\n                  <v-card-title\n                    class=\"headline\"\n                    v-text=\"item.SettingTitle\"\n                  ></v-card-title>\n                \n                <v-card-subtitle v-html=\"item.description\"></v-card-subtitle>\n\n                  <v-card-text  class=\"text-center\">\n                    <v-row flex>\n                      <v-col>\n                      <v-text-field\n                      type=\"number\"\n                      placeholder=\"1\"\n                      v-model=\"item.min\"\n                      :min=\"item.absMin\"\n                      :oninput=\"`if(this.value > ${item.max}) this.value = ${item.max};`\"\n                      :onkeyup=\"`if(this.value > ${item.max}) this.value = ${item.max};`\"\n                      >\n                      </v-text-field>\n                      </v-col>\n                      <v-col>\n                      <v-text-field\n                      type=\"number\"\n                      placeholder=\"100\"\n                      v-model=\"item.max\"\n                      :max=\"item.absMax\"\n                      :oninput=\"`if(this.value < ${item.min}) this.value = ${item.min};`\"\n                      :onkeyup=\"`if(this.value < ${item.min}) this.value = ${item.min};`\"\n                      >\n                      </v-text-field>\n                      </v-col>\n                    </v-row>\n                  </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                  <v-btn\n                    color=\"primary\"\n                    text\n                    @click=\"saveSettings(item)\"\n                  >\n                    Save & Apply\n                  </v-btn>\n                  </v-card-actions>\n                </div>\n              </div>\n            </v-card>\n          </v-col>\n\n        </v-row>\n      </v-container>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n    >\n      {{ snackbarText }}\n\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn\n          color=\"pink\"\n          text\n          v-bind=\"attrs\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n\n    </v-card>\n</template>\n\n<script>\nimport NavDrawer from '@/components/NavDrawer.vue';\n\nexport default {\n  name: 'SettingsCore',\n  components:{\n    NavDrawer,\n\n  },\n  methods: {\n        switchCore(val){\n          this.$emit('to-switchCore', val);\n        },\n        signOut() {\n          this.$emit('to-signOut');\n        },\n        saveSettings(val){\n          this.snackbar = true;\n          this.$store.state.core.settingsDefault[val.setID] = val.min +\"-\"+ val.max;\n          setTimeout(() => this.snackbar = false, 2000);\n        }\n\n  },\n\n  data: () => ({\n    mainSettings: [{\n      setID: \"portRange\",\n      SettingTitle: \"Port scan range\", \n      description: \"This feature allows you to identify services that are running on a Local device\",\n      min: 1,\n      max: 100,\n      absMin: 1,\n      absMax: 65535\n    },\n    {\n      setID: \"lanRange\",\n      SettingTitle: \"LAN scan range\",\n      description: \"Ex: check hosts from 192.168.1.1 to 192.168.1.100\",\n      min: 0,\n      max: 24,\n      absMin: 0,\n      absMax: 255\n    }\n    ],\n    snackbar: false,\n    snackbarText: 'Settings has been updated'\n  }),\n\n}\n</script>\n\n<style scoped>\n.scroll-y {\n   overflow-y: auto\n}\n\n.card-body {\n  overflow-y: scroll;\n  max-height: 83vh;\n}\n</style>"]}]}