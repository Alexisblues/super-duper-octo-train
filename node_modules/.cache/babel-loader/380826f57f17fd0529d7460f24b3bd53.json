{"remainingRequest":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium4/node_modules/babel-loader/lib/index.js!/home/r00t/projects/0day_iot/Arbitrium/arbitrium4/node_modules/eslint-loader/index.js??ref--13-0!/home/r00t/projects/0day_iot/Arbitrium/arbitrium4/src/store/modules/auth.js","dependencies":[{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium4/src/store/modules/auth.js","mtime":1595108113916},{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/r00t/projects/0day_iot/Arbitrium/arbitrium4/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcjAwdC9wcm9qZWN0cy8wZGF5X2lvdC9BcmJpdHJpdW0vYXJiaXRyaXVtNC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBxcyBmcm9tICdxcyc7CnZhciBzdGF0ZSA9IHsKICBhdXRodG9rZW46ICIiLAogIGlzQ29ubmVjdGVkOiBmYWxzZSwKICBFcnJvck1zZzogIiIKfTsKdmFyIGdldHRlcnMgPSB7CiAgZ2V0QXV0aHRva2VuOiBmdW5jdGlvbiBnZXRBdXRodG9rZW4oc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5hdXRodG9rZW47CiAgfSwKICBnZXRJc0Nvbm5lY3RlZDogZnVuY3Rpb24gZ2V0SXNDb25uZWN0ZWQoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5pc0Nvbm5lY3RlZDsKICB9LAogIGdldEVycm9yTXNnOiBmdW5jdGlvbiBnZXRFcnJvck1zZyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLkVycm9yTXNnOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgc2lnbkluOiBmdW5jdGlvbiBzaWduSW4oX3JlZiwgbG9naW5JbmZvKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCB1c2VyTmFtZSwgcGFzc1dvcmQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgdXNlck5hbWUgPSBsb2dpbkluZm8udXNlck5hbWUsIHBhc3NXb3JkID0gbG9naW5JbmZvLnBhc3NXb3JkOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjgwODEvbG9naW4iLCBxcy5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJOYW1lLAogICAgICAgICAgICAgICAgcGFzc1dvcmQ6IHBhc3NXb3JkCiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBjb21taXQoIm1fc2lnbkluIiwgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbW1pdCgibV9FcnJvck1zZyIsIF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgICBlcnJvcjogX2NvbnRleHQudDAKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTBdXSk7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgbV9zaWduSW46IGZ1bmN0aW9uIG1fc2lnbkluKHN0YXRlLCByZXNwb25zZURhdGEpIHsKICAgIHN0YXRlLmF1dGh0b2tlbiA9IHJlc3BvbnNlRGF0YS5hdXRodG9rZW47CiAgICBzdGF0ZS5pc0Nvbm5lY3RlZCA9IHRydWU7CiAgfSwKICBtX0Vycm9yTXNnOiBmdW5jdGlvbiBtX0Vycm9yTXNnKHN0YXRlLCBlcnJvcikgewogICAgcmV0dXJuIHN0YXRlLkVycm9yTXNnID0gZXJyb3IucmVwb25zZS5kYXRhOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/home/r00t/projects/0day_iot/Arbitrium/arbitrium4/src/store/modules/auth.js"],"names":["axios","qs","state","authtoken","isConnected","ErrorMsg","getters","getAuthtoken","getIsConnected","getErrorMsg","actions","signIn","loginInfo","commit","userName","passWord","post","stringify","response","data","error","mutations","m_signIn","responseData","m_ErrorMsg","reponse"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AAGA,IAAMC,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAE,EADD;AAEVC,EAAAA,WAAW,EAAE,KAFH;AAGVC,EAAAA,QAAQ,EAAE;AAHA,CAAd;AAMA,IAAMC,OAAO,GAAG;AACZC,EAAAA,YAAY,EAAE,sBAACL,KAAD;AAAA,WAAWA,KAAK,CAACC,SAAjB;AAAA,GADF;AAEZK,EAAAA,cAAc,EAAE,wBAACN,KAAD;AAAA,WAAWA,KAAK,CAACE,WAAjB;AAAA,GAFJ;AAGZK,EAAAA,WAAW,EAAE,qBAACP,KAAD;AAAA,WAAWA,KAAK,CAACG,QAAjB;AAAA;AAHD,CAAhB;AAMA,IAAMK,OAAO,GAAG;AACNC,EAAAA,MADM,wBACWC,SADX,EACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnBC,cAAAA,MAAmB,QAAnBA,MAAmB;AAAA;AAEpBC,cAAAA,QAFoB,GAEEF,SAFF,CAEpBE,QAFoB,EAEVC,QAFU,GAEEH,SAFF,CAEVG,QAFU;AAAA;AAAA,qBAGJf,KAAK,CAACgB,IAAN,CAAW,6BAAX,EACrBf,EAAE,CAACgB,SAAH,CAAa;AAACH,gBAAAA,QAAQ,EAARA,QAAD;AAAWC,gBAAAA,QAAQ,EAARA;AAAX,eAAb,CADqB,CAHI;;AAAA;AAGrBG,cAAAA,QAHqB;AAKzBL,cAAAA,MAAM,CAAC,UAAD,EAAaK,QAAQ,CAACC,IAAtB,CAAN;AALyB,+CAMlBD,QAAQ,CAACC,IANS;;AAAA;AAAA;AAAA;AAQzBN,cAAAA,MAAM,CAAC,YAAD,cAAN;AARyB,+CASlB;AAACO,gBAAAA,KAAK;AAAN,eATkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWhC;AAZW,CAAhB;AAeA,IAAMC,SAAS,GAAG;AACdC,EAAAA,QADc,oBACJpB,KADI,EACGqB,YADH,EACgB;AAC1BrB,IAAAA,KAAK,CAACC,SAAN,GAAkBoB,YAAY,CAACpB,SAA/B;AACAD,IAAAA,KAAK,CAACE,WAAN,GAAoB,IAApB;AACH,GAJa;AAKdoB,EAAAA,UAAU,EAAE,oBAACtB,KAAD,EAAQkB,KAAR;AAAA,WAAmBlB,KAAK,CAACG,QAAN,GAAiBe,KAAK,CAACK,OAAN,CAAcN,IAAlD;AAAA;AALE,CAAlB;AAQA,eAAe;AACXjB,EAAAA,KAAK,EAALA,KADW;AAEXI,EAAAA,OAAO,EAAPA,OAFW;AAGXI,EAAAA,OAAO,EAAPA,OAHW;AAIXW,EAAAA,SAAS,EAATA;AAJW,CAAf","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\n\nconst state = {\n    authtoken: \"\",\n    isConnected: false,\n    ErrorMsg: \"\"\n};\n\nconst getters = {\n    getAuthtoken: (state) => state.authtoken,\n    getIsConnected: (state) => state.isConnected,\n    getErrorMsg: (state) => state.ErrorMsg\n};\n\nconst actions = {\n    async signIn({commit}, loginInfo){\n        try{\n            let {userName, passWord} = loginInfo;\n            let response = await axios.post(\"http://localhost:8081/login\",\n            qs.stringify({userName, passWord}));\n            commit(\"m_signIn\", response.data);\n            return response.data;\n        }catch(error){\n            commit(\"m_ErrorMsg\", error)\n            return {error};\n        }\n    }\n};\n\nconst mutations = {\n    m_signIn (state, responseData){\n        state.authtoken = responseData.authtoken;\n        state.isConnected = true;\n    },\n    m_ErrorMsg: (state, error) => (state.ErrorMsg = error.reponse.data)\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}