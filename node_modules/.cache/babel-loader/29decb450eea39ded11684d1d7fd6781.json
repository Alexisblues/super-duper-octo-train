{"remainingRequest":"/home/r00t/Desktop/arbitrium5/node_modules/babel-loader/lib/index.js!/home/r00t/Desktop/arbitrium5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/r00t/Desktop/arbitrium5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/r00t/Desktop/arbitrium5/src/views/Shell.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/r00t/Desktop/arbitrium5/src/views/Shell.vue","mtime":1608403029637},{"path":"/home/r00t/Desktop/arbitrium5/node_modules/cache-loader/dist/cjs.js","mtime":1608403031305},{"path":"/home/r00t/Desktop/arbitrium5/node_modules/babel-loader/lib/index.js","mtime":1608403031565},{"path":"/home/r00t/Desktop/arbitrium5/node_modules/cache-loader/dist/cjs.js","mtime":1608403031305},{"path":"/home/r00t/Desktop/arbitrium5/node_modules/vue-loader/lib/index.js","mtime":1608403030785}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcjAwdC9EZXNrdG9wL2FyYml0cml1bTUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVnVlVGVybWluYWwgZnJvbSAndnVlLXRlcm1pbmFsLXVpJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTaGVsbCIsCiAgY29tcG9uZW50czogewogICAgVnVlVGVybWluYWw6IFZ1ZVRlcm1pbmFsCiAgfSwKICBwcm9wczogWyd1dWlkJywgJ3RocmVhZGlkJ10sCiAgbWV0aG9kczogewogICAgY2xvc2VXaW46IGZ1bmN0aW9uIGNsb3NlV2luKCkgewogICAgICB3aW5kb3cuY2xvc2UoKTsKICAgIH0sCiAgICBydW5TaGVsbDogZnVuY3Rpb24gcnVuU2hlbGwoY21kKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB0YXNrSW5mbywgU2hlbGxSZXNwOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHRhc2tJbmZvID0gewogICAgICAgICAgICAgICAgICB1dWlkOiBfdGhpcy4kcm91dGUucGFyYW1zLnV1aWQsCiAgICAgICAgICAgICAgICAgIGNtZDogY21kLAogICAgICAgICAgICAgICAgICBUaHJlYWRJRDogX3RoaXMuJHJvdXRlLnBhcmFtcy50aHJlYWRpZAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgnYWRkVGFzaycsIHRhc2tJbmZvKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgU2hlbGxSZXNwID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIFNoZWxsUmVzcCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXREZXZpY2VzOiBmdW5jdGlvbiBnZXREZXZpY2VzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBkZXZpY2VzSlNPTjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kc3RvcmUuZGlzcGF0Y2goJ2dldERldmljZXMnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGV2aWNlc0pTT04gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBkZXZpY2VzSlNPTik7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9uQ2xpQ29tbWFuZDogZnVuY3Rpb24gb25DbGlDb21tYW5kKGRhdGEsIHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBmaW5hbENNRCwgcmVzcFNoZWxsOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShkYXRhLnRleHQgIT09IHVuZGVmaW5lZCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMzLmdldERldmljZXMoKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgaWYgKF90aGlzMy4kc3RvcmUuc3RhdGUuY29yZS5kZXZpY2VzSUQuaW5kZXhPZihfdGhpczMuJHJvdXRlLnBhcmFtcy51dWlkKSA9PT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczMub3ZlcmxheSA9IHRydWU7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGZpbmFsQ01EID0gZGF0YS50ZXh0OwoKICAgICAgICAgICAgICAgIGlmIChfdGhpczMuJHJvdXRlLnBhcmFtcy5QU2Jvb2wgPT09ICdwcycpIHsKICAgICAgICAgICAgICAgICAgZmluYWxDTUQgPSAncG93ZXJzaGVsbCAtQyAiJyArIGZpbmFsQ01ELnJlcGxhY2UoLyIvZywgJ1xcIicpICsgJyInOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMucnVuU2hlbGwoZmluYWxDTUQpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICByZXNwU2hlbGwgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcFNoZWxsKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHJlamVjdCgnRXJyb3JSZWplY3QnKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG92ZXJsYXk6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBpdGVtU3RyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2F1dGh0b2tlbicpOwogICAgdmFyIGl0ZW1TdHJKID0gSlNPTi5wYXJzZShpdGVtU3RyKTsKICAgIHRoaXMuJHN0b3JlLnN0YXRlLmF1dGguYXV0aHRva2VuID0gaXRlbVN0ckoudmFsdWU7CiAgfSwKICB3YXRjaDogewogICAgb3ZlcmxheTogZnVuY3Rpb24gb3ZlcmxheSh2YWwpIHsKICAgICAgaWYgKHZhbCA9PSB0cnVlKSB7CiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImtleXByZXNzIiwgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["Shell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-container>\n\n  <VueTerminal :intro=\"intro\"\n                console-sign=\"user@zombie:~$\"\n                allow-arbitrary\n                height=\"500px\"\n                @command=\"onCliCommand\">\n    </VueTerminal>\n    <v-overlay :value=\"overlay\">\n      <v-card>\n            <v-btn tile color=\"red\" @click=\"closeWin\">\n              <v-icon left>info</v-icon> Device is no longer connected\n            </v-btn>\n      </v-card>\n        \n    </v-overlay>\n\n</v-container>\n</template>\n\n<script>\nimport VueTerminal from 'vue-terminal-ui'\n\nexport default {\n    name: \"Shell\",\n    components: {\n        VueTerminal\n    },\n    props: ['uuid', 'threadid'],\n    methods: {\n        closeWin(){\n            window.close();\n        },\n        async runShell(cmd){\n          let taskInfo = {uuid: this.$route.params.uuid, cmd, ThreadID:this.$route.params.threadid};\n          let ShellResp = await this.$store.dispatch('addTask', taskInfo);\n          return ShellResp;\n        },\n        async getDevices(){\n          let devicesJSON = await this.$store.dispatch('getDevices');\n          return devicesJSON;\n        },\n        async onCliCommand(data, resolve, reject){\n            if (data.text !== undefined){\n                this.getDevices()\n                .then(()=>{\n                    if(this.$store.state.core.devicesID.indexOf(this.$route.params.uuid)===-1){\n                        this.overlay = true;\n                    }\n                })\n                let finalCMD = data.text;\n                if (this.$route.params.PSbool === 'ps'){\n                    finalCMD = 'powershell -C \"' + finalCMD.replace(/\"/g, '\\\\\"') + '\"';\n                }\n                let respShell = await this.runShell(finalCMD);\n                resolve(respShell);\n            }else{\n                reject('ErrorReject');\n            }\n        },\n        \n    },\n    data: ()=>({\n        overlay: false\n    }),\n    created() {\n        let itemStr = localStorage.getItem('authtoken');\n        const itemStrJ = JSON.parse(itemStr);\n        this.$store.state.auth.authtoken = itemStrJ.value;\n    },\n    watch: {\n        overlay: function(val){\n            if (val==true){\n                window.addEventListener(\"keypress\", e => {\n                    e.preventDefault();\n                });\n            }\n        }\n    },\n}\n</script>\n\n<style>\n.cmd_out {\n    white-space: pre-line\n}\n</style>"],"sourceRoot":"src/views"}]}