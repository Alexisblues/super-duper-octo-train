{"remainingRequest":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/babel-loader/lib/index.js!/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/Apps/Arbitrium/Arbitrium_ControlPanel/src/views/Shell.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/src/views/Shell.vue","mtime":1609371447803},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/cache-loader/dist/cjs.js","mtime":1608611815941},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/babel-loader/lib/index.js","mtime":1608611816297},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/cache-loader/dist/cjs.js","mtime":1608611815941},{"path":"/root/Apps/Arbitrium/Arbitrium_ControlPanel/node_modules/vue-loader/lib/index.js","mtime":1608611815653}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL3Jvb3QvQXBwcy9BcmJpdHJpdW0vQXJiaXRyaXVtX0NvbnRyb2xQYW5lbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBWdWVUZXJtaW5hbCBmcm9tICd2dWUtdGVybWluYWwtdWknOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNoZWxsIiwKICBjb21wb25lbnRzOiB7CiAgICBWdWVUZXJtaW5hbDogVnVlVGVybWluYWwKICB9LAogIHByb3BzOiBbJ3V1aWQnLCAndGhyZWFkaWQnXSwKICBtZXRob2RzOiB7CiAgICBjbG9zZVdpbjogZnVuY3Rpb24gY2xvc2VXaW4oKSB7CiAgICAgIHdpbmRvdy5jbG9zZSgpOwogICAgfSwKICAgIHJ1blNoZWxsOiBmdW5jdGlvbiBydW5TaGVsbChjbWQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHRhc2tJbmZvLCBTaGVsbFJlc3A7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdGFza0luZm8gPSB7CiAgICAgICAgICAgICAgICAgIHV1aWQ6IF90aGlzLiRyb3V0ZS5wYXJhbXMudXVpZCwKICAgICAgICAgICAgICAgICAgY21kOiBjbWQsCiAgICAgICAgICAgICAgICAgIFRocmVhZElEOiBfdGhpcy4kcm91dGUucGFyYW1zLnRocmVhZGlkCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdhZGRUYXNrJywgdGFza0luZm8pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBTaGVsbFJlc3AgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgU2hlbGxSZXNwKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldERldmljZXM6IGZ1bmN0aW9uIGdldERldmljZXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGRldmljZXNKU09OOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRzdG9yZS5kaXNwYXRjaCgnZ2V0RGV2aWNlcycpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBkZXZpY2VzSlNPTiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGRldmljZXNKU09OKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgb25DbGlDb21tYW5kOiBmdW5jdGlvbiBvbkNsaUNvbW1hbmQoZGF0YSwgcmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGZpbmFsQ01ELCByZXNwU2hlbGw7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghKGRhdGEudGV4dCAhPT0gdW5kZWZpbmVkKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpczMuZ2V0RGV2aWNlcygpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBpZiAoX3RoaXMzLiRzdG9yZS5zdGF0ZS5jb3JlLmRldmljZXNJRC5pbmRleE9mKF90aGlzMy4kcm91dGUucGFyYW1zLnV1aWQpID09PSAtMSkgewogICAgICAgICAgICAgICAgICAgIF90aGlzMy5vdmVybGF5ID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgZmluYWxDTUQgPSBkYXRhLnRleHQ7CgogICAgICAgICAgICAgICAgaWYgKF90aGlzMy4kcm91dGUucGFyYW1zLlBTYm9vbCA9PT0gJ3BzJykgewogICAgICAgICAgICAgICAgICBmaW5hbENNRCA9ICdwb3dlcnNoZWxsIC1DICInICsgZmluYWxDTUQucmVwbGFjZSgvIi9nLCAnXFwiJykgKyAnIic7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5ydW5TaGVsbChmaW5hbENNRCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlc3BTaGVsbCA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgcmVzb2x2ZShyZXNwU2hlbGwpOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgcmVqZWN0KCdFcnJvclJlamVjdCcpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3ZlcmxheTogZmFsc2UKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIGl0ZW1TdHIgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXV0aHRva2VuJyk7CiAgICB2YXIgaXRlbVN0ckogPSBKU09OLnBhcnNlKGl0ZW1TdHIpOwogICAgdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC5hdXRodG9rZW4gPSBpdGVtU3RySi52YWx1ZTsKICB9LAogIHdhdGNoOiB7CiAgICBvdmVybGF5OiBmdW5jdGlvbiBvdmVybGF5KHZhbCkgewogICAgICBpZiAodmFsID09IHRydWUpIHsKICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigia2V5cHJlc3MiLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Shell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-container>\n\n  <VueTerminal :intro=\"intro\"\n                console-sign=\"user@zombie:~$\"\n                allow-arbitrary\n                height=\"500px\"\n                @command=\"onCliCommand\">\n    </VueTerminal>\n    <v-overlay :value=\"overlay\">\n      <v-card>\n            <v-btn tile color=\"red\" @click=\"closeWin\">\n              <v-icon left>info</v-icon> Device is no longer connected\n            </v-btn>\n      </v-card>\n        \n    </v-overlay>\n\n</v-container>\n</template>\n\n<script>\nimport VueTerminal from 'vue-terminal-ui'\n\nexport default {\n    name: \"Shell\",\n    components: {\n        VueTerminal\n    },\n    props: ['uuid', 'threadid'],\n    methods: {\n        closeWin(){\n            window.close();\n        },\n        async runShell(cmd){\n          let taskInfo = {uuid: this.$route.params.uuid, cmd, ThreadID:this.$route.params.threadid};\n          let ShellResp = await this.$store.dispatch('addTask', taskInfo);\n          return ShellResp;\n        },\n        async getDevices(){\n          let devicesJSON = await this.$store.dispatch('getDevices');\n          return devicesJSON;\n        },\n        async onCliCommand(data, resolve, reject){\n            if (data.text !== undefined){\n                this.getDevices()\n                .then(()=>{\n                    if(this.$store.state.core.devicesID.indexOf(this.$route.params.uuid)===-1){\n                        this.overlay = true;\n                    }\n                })\n                let finalCMD = data.text;\n                if (this.$route.params.PSbool === 'ps'){\n                    finalCMD = 'powershell -C \"' + finalCMD.replace(/\"/g, '\\\\\"') + '\"';\n                }\n                let respShell = await this.runShell(finalCMD);\n                resolve(respShell);\n            }else{\n                reject('ErrorReject');\n            }\n        },\n        \n    },\n    data: ()=>({\n        overlay: false\n    }),\n    created() {\n        let itemStr = localStorage.getItem('authtoken');\n        const itemStrJ = JSON.parse(itemStr);\n        this.$store.state.auth.authtoken = itemStrJ.value;\n    },\n    watch: {\n        overlay: function(val){\n            if (val==true){\n                window.addEventListener(\"keypress\", e => {\n                    e.preventDefault();\n                });\n            }\n        }\n    },\n}\n</script>\n\n<style>\n.cmd_out {\n    white-space: pre-line\n}\n</style>"],"sourceRoot":"src/views"}]}